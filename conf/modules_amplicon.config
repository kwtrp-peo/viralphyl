/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

//
// General configuration options
//

process {
    withName: 'GENERATE_SAMPLESHEET' {
        publishDir = [
                path: { "${params.outdir}/" },
                mode: params.publish_dir_mode,
                pattern: "*.{tsv,csv}"
            ]
    }

    withName: 'ARTIC_GUPPYPLEX' {
        ext.args = [
                    params.normalize ? "--normalize ${params.normalize}" : '',
                    params.min_read_length ? "--min-length ${params.min-length}" : '',
                    params.max_read_length ? "--max-length ${params.max-length}" : ''
                ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/guppyplex" },
            enabled: false
        ]
    }


    withName: 'ARTIC_MINION' {
        ext.args = [
            '--normalise 500',
            params.artic_minion_caller  == 'medaka' ? '--medaka' : '',
            params.artic_minion_aligner == 'bwa'    ? '--bwa'    : '--minimap2'
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${params.artic_minion_caller}" },
            mode: params.publish_dir_mode,
            pattern: "*.{sorted.bam,sorted.bam.bai,fail.vcf,merged.vcf,primers.vcf,gz,tbi,consensus.fasta}"
        ]
    }


//
// Optional configuration options
//

    if (!params.skip_nanoplot) {
        process {
            withName: 'NANOPLOT' {
                publishDir = [
                    path: { "${params.outdir}/nanoplot/${meta.id}" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }
    
}