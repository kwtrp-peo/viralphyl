name: 🚀 Enforce Source Branch for Main

on:
  push:
    branches:
      - main

jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      is_valid_commit: ${{ steps.commit_check.outputs.is_valid_commit }}
    continue-on-error: true  # Allow the workflow to proceed even if check fails

    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ORG_GITHUB_PAT }}
          fetch-depth: 50

      - name: 🔍 Detect Commit Type
        id: commit_check
        run: |
          git fetch --all --prune --tags
          LATEST_COMMIT=$(git rev-parse HEAD)
          PARENT_COUNT=$(git rev-list --count HEAD^@)
          echo "🛠️ Debug: PARENT_COUNT = '$PARENT_COUNT'"

          if [ "$PARENT_COUNT" -eq 1 ]; then
            echo "❌ Direct commits to 'main' are NOT allowed!"
            echo "🔄 Creating a rollback branch: hotfix/rollback"

            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || git rev-parse HEAD~1)
            git checkout -b hotfix/rollback "$LATEST_TAG"
            git push origin hotfix/rollback
            echo "⏪ Created rollback branch: hotfix/rollback"

            echo "is_valid_commit=false" >> $GITHUB_ENV
            echo "is_valid_commit=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          MERGED_COMMIT=$(git rev-list -n 1 --parents $LATEST_COMMIT | awk '{print $3}')
          if [ -z "$MERGED_COMMIT" ]; then
            echo "❌ Invalid merge detected! Only merges from 'dev' or 'hotfix/*' are allowed."

            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || git rev-parse HEAD~1)
            echo "🔄 Creating rollback branch: hotfix/rollback"
            git checkout -b hotfix/rollback "$LATEST_TAG"
            git push origin hotfix/rollback
            echo "⏪ Created rollback branch: hotfix/rollback"

            echo "is_valid_commit=false" >> $GITHUB_ENV
            echo "is_valid_commit=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          SOURCE_BRANCH=$(git branch -r --contains "$MERGED_COMMIT" | grep -v "origin/main" | sed 's/origin\///' | head -n 1 | xargs)
          echo "🛠️ Debug: SOURCE_BRANCH = '$SOURCE_BRANCH'"

          if [[ "$SOURCE_BRANCH" == "dev" || "$SOURCE_BRANCH" =~ ^hotfix/.*$ ]]; then
            echo "✅ Merge is from an allowed branch: $SOURCE_BRANCH"
            echo "is_valid_commit=true" >> $GITHUB_ENV
            echo "is_valid_commit=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Merge is NOT from 'dev' or 'hotfix/*'! Found: '$SOURCE_BRANCH'"

            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || git rev-parse HEAD~1)
            echo "🔄 Creating rollback branch: hotfix/rollback"
            git checkout -b hotfix/rollback "$LATEST_TAG"
            git push origin hotfix/rollback
            echo "⏪ Created rollback branch: hotfix/rollback"

            echo "is_valid_commit=false" >> $GITHUB_ENV
            echo "is_valid_commit=false" >> $GITHUB_OUTPUT
            exit 0
          fi

  release:
    needs: check-commit
    if: needs.check-commit.outputs.is_valid_commit == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ORG_GITHUB_PAT }}
          fetch-depth: 0

      - name: 🔹 Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 🚀 Install Dependencies
        run: npm ci

      - name: 🔄 Run Semantic Release
        env:
          GH_TOKEN: ${{ secrets.ORG_GITHUB_PAT }}
        run: npx semantic-release

  auto-merge-rollback:
    needs: check-commit
    if: needs.check-commit.outputs.is_valid_commit == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ORG_GITHUB_PAT }}
          fetch-depth: 0

      - name: 🔄 Merge Rollback Branch Directly
        env:
          GH_TOKEN: ${{ secrets.ORG_GITHUB_PAT }}
        run: |
          git fetch origin hotfix/rollback
          git checkout -B hotfix/rollback origin/hotfix/rollback  # Ensure local branch exists
          git checkout main
          git reset --hard hotfix/rollback
          git push origin main --force

      - name: 🗑️ Delete Rollback Branch
        env:
          GH_TOKEN: ${{ secrets.ORG_GITHUB_PAT }}
        run: |
          git push origin --delete hotfix/rollback
          